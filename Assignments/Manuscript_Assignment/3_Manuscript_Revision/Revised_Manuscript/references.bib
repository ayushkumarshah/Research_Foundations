@article{r1,
author = {Adam, Ronald and Suharjito, Suharjito},
year = {2014},
month = {05},
pages = {168 - 180},
title = {Plagiarism detection algorithm using natural language processing based on grammar analyzing},
volume = {10},
journal = {Journal of Theoretical and Applied Information Technology}
}
@article{r2,
author = {Willett, Peter},
year = {2006},
month = {07},
pages = {},
title = {The Porter stemming algorithm: Then and now},
volume = {40},
journal = {Program electronic library and information systems},
doi = {10.1108/00330330610681295}
}
@article{r3,
author = {Chong, Miranda and Specia, Lucia and Mitkov, Ruslan},
year = {2010},
month = {01},
pages = {},
title = {Using Natural Language Processing for Automatic Detection of Plagiarism}
}
@InProceedings{r4,
author="Ceska, Zdenek",
editor="Nordstr{\"o}m, Bengt
and Ranta, Aarne",
title="Plagiarism Detection Based on Singular Value Decomposition",
booktitle="Advances in Natural Language Processing",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="108--119",
abstract="Plagiarism is a widely spread problem that is the main focus of interest these days. In this paper, we propose a new method solving associations of phrases contained in text documents. This method, called SVDPlag, employs Singular Value Decomposition (SVD) for this purpose. Further, we discuss other approaches to plagiarism detection and compare them with our method. To examine the efficiency of plagiarism detection methods, we used an experimental corpus of 950 text documents about politics, which were created from the standard CTK corpus. The experiments indicate that our approach significantly improves the accuracy of plagiarism detection and overcomes other methods.",
isbn="978-3-540-85287-2"
}
@INPROCEEDINGS{r5,
author={D. {Gupta} and V. {K} and C. K. {Singh}},
booktitle={2014 International Conference on Advances in Computing, Communications and Informatics (ICACCI)},
title={Using Natural Language Processing techniques and fuzzy-semantic similarity for automatic external plagiarism detection},
year={2014},
volume={},
number={},
pages={2694-2699},
keywords={document handling;fuzzy set theory;natural language processing;pattern matching;natural language processing techniques;automatic external plagiarism detection;fuzzy-semantic similarity measures;document comparisons;PAN 2012 data set;Plagiarism;Semantics;Frequency modulation;Tagging;Natural language processing;Informatics;Waste materials;External Plagiarism;Intelligent Plagiarism;Fuzzy-Semantic Similarity;POS Tagging;NLP techniques},
doi={10.1109/ICACCI.2014.6968314},
ISSN={null},
month={Sep.},}
@article{r6,
author = {Jana Vembunarayanan},
year = {2013},
month = {10},
day = {27},
pages = {},
url = {https://janav.wordpress.com/2013/10/27/tf-idf-and-cosine-similarity/},
title = {Tf-Idf and Cosine similarity} 
}
@article{r7,
author = {Triton},
year = {2012},
month = {01},
pages = {},
title = {Triton ~ Subscription Engine for Publishers} 
}
@Article{r8,
author="Mogotsi, I. C.",
title="Christopher D. Manning, Prabhakar Raghavan, and Hinrich Sch{\"u}tze: Introduction to information retrieval",
journal="Information Retrieval",
year="2010",
month="Apr",
day="01",
volume="13",
number="2",
pages="192--195",
issn="1573-7659",
doi="10.1007/s10791-009-9115-y",
url="https://doi.org/10.1007/s10791-009-9115-y"
}
@article{r9,
author = {Selva Prabhakaran},
year = {2018},
month = {10},
day = {22},
pages = {},
title = {Cosine Similarity – Understanding the math and how it works (with python codes)}, 
url = "https://www.machinelearningplus.com/nlp/cosine-similarity"
}
@MISC{r10,
    author = {Bal Krishna Bal and Prajol Shrestha and Madan Puraskar Pustakalaya},
    title = {A Morphological Analyzer and a Stemmer for Nepali},
    year = {}
}

@article{pande_devanagari_nodate,
	title = {A {Devanagari} {Script} based {Stemmer}},
	abstract = {Corpus based stemming has been devised to develop stemmers targeting language independent environment. These stemmers are applicable to all languages based on Latin script. In the present work, we exploit the English corpus for coded words of Devanagari script. We use the technique of Romanization and the stemmer is being tested over 100 randomly chosen Hindi words. We show that this approach has a direct application to the standardization of regional languages. For instance, we standardize the Kumauni language.},
	language = {en},
	author = {Pande, B P and Tamta, Pawan and Dhami, H S and Campus, SSJ},
	pages = {12},
	file = {Pande et al. - A Devanagari Script based Stemmer.pdf:/Users/ayushkumarshah/Zotero/storage/KJLKZZQ4/Pande et al. - A Devanagari Script based Stemmer.pdf:application/pdf}
}

@inproceedings{dangui_lightweight_2015,
	address = {New York, NY, USA},
	series = {Compute '15},
	title = {A {Lightweight} {Stemmer} for {Devanagari} {Script}},
	isbn = {978-1-4503-3650-5},
	url = {http://doi.org/10.1145/2835043.2835061},
	doi = {10.1145/2835043.2835061},
	abstract = {Stemming is an operation that reduces morphological variants of words to its stem. Stemming is a pre-processing tool which is used in various natural language processing applications such as text summarization, information retrieval, word sense disambiguation, and document clustering. It improves the performance of Information Retrieval systems by increasing recall and reducing index size. The recall of the system is increased by stemming as the words present in the query are matched with their linguistic variants in the documents. It also reduces the index size which in turn leads to increase in speed and reduction in memory requirements. The different languages in Devanagari script are Hindi, Marathi, Konkani etc. The proposed idea is to develop a common stemmer for languages in Devanagari script by using supervised approach and to evaluate stemmer to measure the performance of stemmer.},
	urldate = {2020-10-27},
	booktitle = {Proceedings of the 8th {Annual} {ACM} {India} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Dangui, Shruti R. and Naik, Nitesh},
	month = oct,
	year = {2015},
	keywords = {Information Retrieval System, Overstemming, Recall, Stemmer, Supervised, Understemming},
	pages = {55--62},
	file = {Full Text PDF:/Users/ayushkumarshah/Zotero/storage/GKCFF3AD/Dangui and Naik - 2015 - A Lightweight Stemmer for Devanagari Script.pdf:application/pdf}
}

@inproceedings{makhija_study_2016,
	title = {A study of different stemmer for {Sindhi} language based on {Devanagari} script},
	abstract = {Presently on the globe, Internet plays a very important role in human's day to day life. On the blink of an eye, information must be retrieved by search engines. Web search engines are developing different techniques to make searching faster and retrieves information efficiently. Stemming is a technique to diminish word into its root word or stem word. It is also knows as a Conflation. Stemming is an important task which is included in Natural Language Processing (NLP) applications. This paper discusses various stemmers which are developed for different languages. Also, this research work aims to develop a stemmer for Devanagari script based Sindhi language. It strips the prefixes and suffixes from inflected word to their stem or root. This stemmer will minimize the problems of over and under stemming and retrieves the information efficiently and faster.},
	booktitle = {2016 3rd {International} {Conference} on {Computing} for {Sustainable} {Global} {Development} ({INDIACom})},
	author = {Makhija, S. D.},
	month = mar,
	year = {2016},
	keywords = {Decision support systems, Devanagari script, different stemmer, Handheld computers, inflected word, Inflected word, Information Reterival (IR), information retrieval, Internet, natural language processing, Natural language processing (NLP), NLP applications, Over and Under Stemming, Part of Speech (POS), Prefix/Suffix Stripping, root word, search engines, Sindhi language, stem word, Stemming, Web search engines},
	pages = {2326--2329},
	file = {IEEE Xplore Full Text PDF:/Users/ayushkumarshah/Zotero/storage/2HBX7M33/Makhija - 2016 - A study of different stemmer for Sindhi language b.pdf:application/pdf;IEEE Xplore Abstract Record:/Users/ayushkumarshah/Zotero/storage/253HN9II/7724678.html:text/html}
}

@inproceedings{abhishek_effective_2013,
	address = {Hamirpur, India},
	title = {An effective stemmer in {Devanagari} script},
	url = {https://www.seekdl.org/conferences/paper/details/1309.html},
	abstract = {In today’s word of internet web search engines are developing the techniques to make the surfing faster. Stemming is a technique used by web search engines for prefix and suffix removal from the derived word. Stemming provides the way to store similar documents together. This research work aims at the development of Hindi stemmer based on Devanagari script for stripping both prefixes as well as suffixes from derived word to provide better stemming than previous stemmers. Proposed stemmer uses the hybrid approach which is the combination of lookup algorithm, suffix stripping algorithm and prefix removal algorithm.},
	language = {en},
	urldate = {2020-10-27},
	author = {MONIKA, DOGRA and ABHISHEK, TYAGI and UPENDRA, MISHRA},
	month = apr,
	year = {2013},
	pages = {22--25},
	file = {Snapshot:/Users/ayushkumarshah/Zotero/storage/34YFWP49/4252.html:text/html;Full Text PDF:/Users/ayushkumarshah/Zotero/storage/KSSE2EA9/ABHISHEK et al. - 2013 - An effective stemmer in Devanagari script.pdf:application/pdf;Snapshot:/Users/ayushkumarshah/Zotero/storage/2GZSR98K/4252.html:text/html}
}
